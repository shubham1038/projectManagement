{"version":3,"sources":["webpack:///src/app/view-task/task-details/task-details.component.ts","webpack:///src/app/view-task/task-details/task-details.component.html","webpack:///src/app/view-task/view-task-routing.module.ts","webpack:///src/app/view-task/view-task.component.ts","webpack:///src/app/view-task/view-task.component.html","webpack:///src/app/view-task/view-task.module.ts"],"names":["TaskDetailsComponent","translate","router","route","lang","taskDetails","endTaskEvent","snapshot","params","setDefaultLang","use","taskId","navigate","console","log","emit","selector","templateUrl","styleUrls","routes","path","component","ViewTaskRoutingModule","forChild","imports","exports","ViewTaskComponent","viewTaskService","projectService","modalService","spinner","tasks","projectsInfo","desc","selectedProject","getTasks","show","subscribe","data","hide","error","redirectAfterSave","message","property","direction","sort","a","b","getProject","getProjects","response","JSON","stringify","modelRef","openProjectSearchPopUp","obj","getSelectedProject","updateTaskStatus","selectedItem","popMesg","confirmCallback","popTitle","confirmOK","searchProject","endTask","ViewTaskModule","forRoot","declarations"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACsBoB;;AAAuC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA0D;;AACjE;;;;AAAyB;;AAAI;;;;AAA7B;;AAAA;;;;;;;;AAChC;;AAAuC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACZ;;;;AAAyB;;;;AAAzB;;AAAA;;;;;;;;AAC3B;;AAAuC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACQ;;;;AAA4B;;;;AAA5B;;AAAA;;;;;;AAZvD;;AACI;;AAAI;;AAAmB;;AACvB;;AAAI;;AAA8C;;AAClD;;AAAI;;AAAuB;;AAC3B;;AAAI;;;;AAA4C;;AAChD;;AAAI;;;;AAAyC;;AAC7C;;AACI;;AAEA;;AAEA;;AAEJ;;AACJ;;;;;;AAbQ;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAEQ;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;;;QDhBfA,oB;AAOX,oCAAoBC,SAApB,EACoBC,MADpB,EAEoBC,KAFpB,EAEoC;AAAA;;AAFhB,aAAAF,SAAA,GAAAA,SAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAC,KAAA,GAAAA,KAAA;AAPpB,aAAAC,IAAA,GAAa,IAAb;AAEA,aAAAC,WAAA,GAAiB,EAAjB;AAEU,aAAAC,YAAA,GAAe,IAAI,0DAAJ,EAAf;;AAIR,YAAG,KAAKJ,MAAL,CAAYK,QAAZ,CAAqBC,MAAxB,EAAgC;AAC9B,eAAKJ,IAAL,GAAY,KAAKF,MAAL,CAAYK,QAAZ,CAAqBC,MAArB,CAA4BJ,IAAxC;AACA,eAAKH,SAAL,CAAeQ,cAAf,CAA8B,KAAKL,IAAnC;AACA,eAAKH,SAAL,CAAeS,GAAf,CAAmB,KAAKN,IAAxB;AACD;AACD;;;;mCAEM,CACP;;;6BAEIO,M,EAAQ;AACX,eAAKR,KAAL,CAAWS,QAAX,CAAoB,CAAC,KAAKR,IAAL,GAAU,WAAV,GAAsBO,MAAvB,CAApB;AACD;;;gCACOA,M,EAAM;AACZE,iBAAO,CAACC,GAAR,CAAY,cAAaH,MAAzB;AACA,eAAKL,YAAL,CAAkBS,IAAlB,CAAuBJ,MAAvB;AACD;;;;;;;uBA1BUX,oB,EAAoB,qI,EAAA,+H,EAAA,uH;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,c;AAAA,ic;AAAA;AAAA;ACVjC;;AACI;;AACI;;AACI;;AACI;;AAAI;;;;AAAyB;;AAC7B;;AAAI;;;;AAA+B;;AACnC;;AAAI;;;;AAA6B;;AACjC;;AAAI;;;;AAA8B;;AAClC;;AAAI;;;;AAA4B;;AAChC;;AAAI;;AAAM;;AACV;;AACJ;;AAEJ;;AACA;;AACI;;AAeJ;;AACJ;;AACJ;;;;AA5BoB;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAOJ;;AAAA;;;;;;;;;;sEDLHA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTgB,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;gBAG9B;;;gBAGA;;;;;;;;;;;;;;;;;;;;AEhBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,QAAMC,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;QAWaC,qB;;;;;YAAAA;;;;yBAAAA,qB;AAAqB,O;AAAA,gBAHvB,CAAC,6DAAaC,QAAb,CAAsBJ,MAAtB,CAAD,CAGuB,EAFtB,4DAEsB;;;;0HAArBG,qB,EAAqB;AAAA;AAAA,kBAFtB,4DAEsB;AAAA,O;AAFV,K;;;;;sEAEXA,qB,EAAqB;cAJjC,sDAIiC;eAJxB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,QAAb,CAAsBJ,MAAtB,CAAD,CADD;AAERM,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAIwB,Q;;;;;;;;;;;;;;;;;;AChBlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAYaC,iB;AASX,iCAAoBC,eAApB,EACUC,cADV,EAEUC,YAFV,EAGUC,OAHV,EAGsC;AAAA;;AAHlB,aAAAH,eAAA,GAAAA,eAAA;AACV,aAAAC,cAAA,GAAAA,cAAA;AACA,aAAAC,YAAA,GAAAA,YAAA;AACA,aAAAC,OAAA,GAAAA,OAAA;AAVV,aAAAC,KAAA,GAAa,EAAb;AACA,aAAAC,YAAA,GAAoB,EAApB;AACA,aAAAC,IAAA,GAAgB,KAAhB;AAEA,aAAAC,eAAA,GAAuB,IAAvB;AAMyC;;;;mCAEjC;AACN,eAAKC,QAAL;AACD;;;mCAEU;AAAA;;AACT,eAAKL,OAAL,CAAaM,IAAb;AACA,eAAKT,eAAL,CAAqBQ,QAArB,GAAgCE,SAAhC,CAA0C,UAAAC,IAAI,EAAI;AAChDzB,mBAAO,CAACC,GAAR,CAAYwB,IAAZ;AACA,iBAAI,CAACP,KAAL,GAAaO,IAAb;;AACA,iBAAI,CAACR,OAAL,CAAaS,IAAb;AACD,WAJD,EAIG,UAAAC,KAAK,EAAI;AACV,iBAAI,CAACV,OAAL,CAAaS,IAAb;;AACA,iBAAI,CAACE,iBAAL,CAAuBD,KAAK,CAACA,KAAN,CAAYE,OAAnC,EAA4C,YAAM,CAAG,CAArD,EAAuD,OAAvD;AACD,WAPD;AAQD;;;6BACIC,Q,EAAkB;AACrB,eAAKV,IAAL,GAAY,CAAC,KAAKA,IAAlB;AACA,cAAIW,SAAS,GAAG,KAAKX,IAAL,GAAY,CAAZ,GAAgB,CAAC,CAAjC;AACA,eAAKF,KAAL,CAAWc,IAAX,CAAgB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC9B,gBAAID,CAAC,CAACH,QAAD,CAAD,GAAcI,CAAC,CAACJ,QAAD,CAAnB,EAA+B;AAC7B,qBAAO,CAAC,CAAD,GAAKC,SAAZ;AACD,aAFD,MAEO,IAAIE,CAAC,CAACH,QAAD,CAAD,GAAcI,CAAC,CAACJ,QAAD,CAAnB,EAA+B;AACpC,qBAAO,IAAIC,SAAX;AACD,aAFM,MAEA;AACL,qBAAO,CAAP;AACD;AACF,WARD;AASD;;;wCAEe;AACd,eAAKI,UAAL;AACD;;;qCAEY;AAAA;;AACX,eAAKlB,OAAL,CAAaM,IAAb;AACA,eAAKR,cAAL,CAAoBqB,WAApB,GAAkCZ,SAAlC,CAA4C,UAAAa,QAAQ,EAAI;AACtDrC,mBAAO,CAACC,GAAR,CAAY,iBAAiBqC,IAAI,CAACC,SAAL,CAAeF,QAAf,CAA7B;AACA,kBAAI,CAAClB,YAAL,GAAoBkB,QAApB;;AACA,kBAAI,CAACpB,OAAL,CAAaS,IAAb;;AACA,kBAAI,CAACc,QAAL,GAAgB,MAAI,CAACxB,YAAL,CAAkByB,sBAAlB,CACd,MAAI,CAACtB,YADS,EAEd,gBAFc,EAGd,UAACuB,GAAD,EAAS;AAAE,oBAAI,CAACC,kBAAL,CAAwBD,GAAxB;AAA+B,aAH5B,EAId,QAJc,CAAhB;AAMD,WAVD,EAUG,UAAAf,KAAK,EAAI;AACV3B,mBAAO,CAACC,GAAR,CAAY,OAAZ;AACD,WAZD;AAaD;;;gCAEOH,M,EAAQ;AAAA;;AACdE,iBAAO,CAACC,GAAR,CAAY,aAAaH,MAAzB;AACA,eAAKgB,eAAL,CAAqB8B,gBAArB,CAAsC9C,MAAtC,EAA8C0B,SAA9C,CAAwD,UAAAa,QAAQ,EAAI;AAClE,kBAAI,CAACT,iBAAL,CAAuB,yBAAvB,EAAkD,YAAM,CAAG,CAA3D,EAA6D,SAA7D;;AACA,kBAAI,CAACN,QAAL;AACD,WAHD;AAID;;;2CACkBoB,G,EAAK;AACtB,eAAKF,QAAL,CAAcd,IAAd;AACA,eAAKL,eAAL,GAAuBqB,GAAG,CAACG,YAA3B;AACA,eAAK3B,KAAL,GAAawB,GAAG,CAACG,YAAJ,CAAiB3B,KAA9B;AACD;;;0CAEiB4B,O,EAASC,e,EAAiBC,Q,EAAU;AACpD,eAAKhC,YAAL,CAAkBiC,SAAlB,CAA4BH,OAA5B,EAAqCC,eAArC,EAAsDC,QAAtD;AACD;;;;;;;uBA/EUnC,iB,EAAiB,8H,EAAA,6H,EAAA,6J,EAAA,8H;AAAA,K;;;YAAjBA,iB;AAAiB,oC;AAAA,e;AAAA,c;AAAA,4vB;AAAA;AAAA;ACZ9B;;AACI;;AACI;;AACI;;AACI;;AAAoB;;;;AAA6B;;AACrD;;AACA;;AACI;;;;AAEJ;;AACA;;AACI;;AACI;AAAA,mBAAS,IAAAqC,aAAA,EAAT;AAAwB,WAAxB;;AAA0B;;;;AAA2B;;AAC7D;;AACA;;AACI;;AAAoB;;;;AAA4B;;AAChD;;AACI;AAAA,mBAAS,IAAAlB,IAAA,CAAK,WAAL,CAAT;AAA0B,WAA1B;;AAA4B;;;;AAA8B;;AAC9D;;AACI;AAAA,mBAAS,IAAAA,IAAA,CAAK,SAAL,CAAT;AAAwB,WAAxB;;AAA0B;;;;AAA4B;;AAC1D;;AACI;AAAA,mBAAS,IAAAA,IAAA,CAAK,UAAL,CAAT;AAAyB,WAAzB;;AAA2B;;;;AAA6B;;AAC5D;;AACI;AAAA,mBAAS,IAAAA,IAAA,CAAK,QAAL,CAAT;AAAuB,WAAvB;;AAAyB;;;;AAA8B;;AAC/D;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAAwC;AAAA,mBAAgB,IAAAmB,OAAA,QAAhB;AAA+B,WAA/B;;AAAiC;;AAC7E;;AACA;;AACI;;AAAwB;;AAAa;;AACzC;;;;AA7BoC;;AAAA;;AAGyB;;AAAA;;AAC1B,8IAAkC,UAAlC,EAAkC,IAAlC;;AAIW;;AAAA;;AAGV;;AAAA;;AAEY;;AAAA;;AAEF;;AAAA;;AAEC;;AAAA;;AAEF;;AAAA;;AAMvB;;AAAA;;;;;;;;;;sEDjBTtC,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTV,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAsBa+C,c;;;;;YAAAA;;;;yBAAAA,c;AAAc,O;AAAA,gBAThB,CACP,4DADO,EAEP,mEAFO,EAGP,+EAHO,EAIP,gEAAYC,OAAZ,EAJO,EAKP,kEALO,EAMP,4DANO,CASgB;;;;0HAAdD,c,EAAc;AAAA,uBAVV,sEAUU,EAVS,yFAUT;AAV6B,kBAEpD,4DAFoD,EAGpD,mEAHoD,EAIpD,+EAJoD,EAI/B,+DAJ+B,EAMpD,kEANoD,EAOpD,4DAPoD;AAU7B,O;AAHP,K;;;;;sEAGPA,c,EAAc;cAX1B,sDAW0B;eAXjB;AACRE,sBAAY,EAAE,CAAC,sEAAD,EAAoB,yFAApB,CADN;AAER3C,iBAAO,EAAE,CACP,4DADO,EAEP,mEAFO,EAGP,+EAHO,EAIP,gEAAY0C,OAAZ,EAJO,EAKP,kEALO,EAMP,4DANO;AAFD,S;AAWiB,Q","file":"view-task-view-task-module-es5.js","sourcesContent":["import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TaskDetails } from 'src/app/core/model/task-details';\n\n@Component({\n  selector: 'app-task-details',\n  templateUrl: './task-details.component.html',\n  styleUrls: ['./task-details.component.css']\n})\nexport class TaskDetailsComponent implements OnInit {\n\n  lang:string ='en';\n  @Input()\n  taskDetails:any =[];\n\n  @Output() endTaskEvent = new EventEmitter();\n  constructor(private translate: TranslateService,\n              private router: ActivatedRoute,\n              private route : Router) {\n    if(this.router.snapshot.params) {\n      this.lang = this.router.snapshot.params.lang;\n      this.translate.setDefaultLang(this.lang);\n      this.translate.use(this.lang);\n    }\n   }\n\n  ngOnInit(): void {\n  }\n\n  edit(taskId) {\n    this.route.navigate([this.lang+'/addTask/'+taskId])\n  }\n  endTask(taskId): void{\n    console.log('taskId---' +taskId)\n    this.endTaskEvent.emit(taskId)\n  }\n}\n","<div class=\"panel-body\">\n    <table class=\"table table-hover table-sm\" datatable>\n        <thead class=\"thead-light\">\n            <tr>\n                <th>{{'lblTask' | translate}}</th>\n                <th>{{'lblParentTask' | translate}}</th>\n                <th>{{'lblPriority' | translate}}</th>\n                <th>{{'lblStartDate' | translate}}</th>\n                <th>{{'lblEndDate' | translate}}</th>\n                <th>Action</th>\n                <th></th>\n            </tr>\n\n        </thead>\n        <tbody>\n            <tr *ngFor = \"let taskDetail of taskDetails; let i = index\">\n                <td>{{taskDetail.task}}</td>\n                <td>{{taskDetail?.selectedParentTask?.parentTask}}</td>\n                <td>{{taskDetail.priority}}</td>\n                <td>{{taskDetail.startDate |date:'yyyy-MM-dd' }}</td>\n                <td>{{taskDetail.endDate |date:'yyyy-MM-dd'}}</td>\n                <td>\n                    <button *ngIf=\"taskDetail.status != 0\" (click)=\"edit(taskDetail.taskId)\" class='btn btn-primary'><i\n                            class=\"fa fa-futboll-0\">{{'btnEdit' | translate}}</i></button>\n                    <button *ngIf=\"taskDetail.status == 0\" (click)=\"edit(taskDetail.taskId)\" class='btn btn-primary' data-toggle=\"modal\"\n                        data-target=\"#myModal\">{{'btnView' | translate}}</button>\n                    <button *ngIf=\"taskDetail.status != 0\" (click)=\"endTask(taskDetail.taskId)\" class='btn btn-primary'\n                        data-toggle=\"modal\" data-target=\"#myModal\">{{'btnEndTask' | translate}}</button>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ViewTaskComponent } from './view-task.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ViewTaskComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ViewTaskRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ViewTaskService, ProjectService } from '../core/service';\nimport { TaskDetails } from '../core/model/task-details';\nimport { ModalService } from '../shared/components/confirmok/data/modal-service';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-view-task',\n  templateUrl: './view-task.component.html',\n  styleUrls: ['./view-task.component.css']\n})\nexport class ViewTaskComponent implements OnInit {\n\n  tasks: any = []\n  projectsInfo: any = []\n  desc: boolean = false;\n  public modelRef: BsModalRef;\n  selectedProject: any = null;\n  taskId: string;\n\n  constructor(private viewTaskService: ViewTaskService,\n    private projectService: ProjectService,\n    private modalService: ModalService,\n    private spinner: NgxSpinnerService) { }\n\n  ngOnInit(): void {\n    this.getTasks()\n  }\n\n  getTasks() {\n    this.spinner.show();\n    this.viewTaskService.getTasks().subscribe(data => {\n      console.log(data)\n      this.tasks = data;\n      this.spinner.hide();\n    }, error => {\n      this.spinner.hide()\n      this.redirectAfterSave(error.error.message, () => { }, \"Error\");\n    })\n  }\n  sort(property: string) {\n    this.desc = !this.desc;\n    let direction = this.desc ? 1 : -1;\n    this.tasks.sort(function (a, b) {\n      if (a[property] < b[property]) {\n        return -1 * direction;\n      } else if (a[property] > b[property]) {\n        return 1 * direction;\n      } else {\n        return 0;\n      }\n    })\n  }\n\n  searchProject() {\n    this.getProject();\n  }\n\n  getProject() {\n    this.spinner.show();\n    this.projectService.getProjects().subscribe(response => {\n      console.log('response ---' + JSON.stringify(response))\n      this.projectsInfo = response;\n      this.spinner.hide();\n      this.modelRef = this.modalService.openProjectSearchPopUp(\n        this.projectsInfo,\n        \"Search Project\",\n        (obj) => { this.getSelectedProject(obj); },\n        \"Select\"\n      )\n    }, error => {\n      console.log('error')\n    })\n  }\n\n  endTask(taskId) {\n    console.log('taskId :' + taskId)\n    this.viewTaskService.updateTaskStatus(taskId).subscribe(response => {\n      this.redirectAfterSave(\"Task ended successfully\", () => { }, \"Success\");\n      this.getTasks();\n    })\n  }\n  getSelectedProject(obj) {\n    this.modelRef.hide();\n    this.selectedProject = obj.selectedItem;\n    this.tasks = obj.selectedItem.tasks;\n  }\n\n  redirectAfterSave(popMesg, confirmCallback, popTitle) {\n    this.modalService.confirmOK(popMesg, confirmCallback, popTitle);\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"container\">\n        <div class=\"form-group row\">\n            <div class=\"col-md-1 col-sm-1 col-xs-1\">\n                <label class=\"mt-2\">{{'lblProject' | translate}}:</label>\n            </div>\n            <div class=\"col-md-3 col-sm-9 col-xs-9\">\n                <input type=\"text\" class=\"form-control mt-2\" placeholder=\"{{'lblSearchProject' | translate}}\"\n                    name=\"project\" [value]=\"selectedProject?.project\" [readonly]=\"true\">\n            </div>\n            <div class=\"col-md-1 col-sm-1 col-xs-1\">\n                <button type=\"button\" class=\"btn btn-info mt-2\"\n                    (click)=\"searchProject()\">{{'btnSearch' | translate}}</button>\n            </div>\n            <div class=\"col-md-7 col-sm-12 col-xs-12\">\n                <label class=\"ml-2\">{{'lblSortBy' | translate}}:</label>\n                <button type=\"submit\" class=\"btn btn-secondary m-2\" id=\"fname\"\n                    (click)=\"sort('startDate')\">{{'btnStartDate' | translate}}</button>\n                <button type=\"submit\" class=\"btn btn-secondary m-2\" id=\"lname\"\n                    (click)=\"sort('endDate')\">{{'btnEndDate' | translate}}</button>\n                <button type=\"submit\" class=\"btn btn-secondary m-2\" id=\"empid\"\n                    (click)=\"sort('priority')\">{{'btnPriority' | translate}}</button>\n                <button type=\"submit\" class=\"btn btn-secondary m-2\" id=\"empid\"\n                    (click)=\"sort('status')\">{{'btnCompleted' | translate}}</button>\n            </div>\n        </div>\n    </div>\n</div>\n<div>\n    <app-task-details [taskDetails]=\"tasks\" (endTaskEvent)='endTask($event)'></app-task-details>\n</div>\n<ngx-spinner bdColor=\"rgba(51, 51, 51, 0.8)\" size=\"default\" type=\"ball-spin-clockwise\">\n    <p style=\"color: white\">Please Wait. </p>\n</ngx-spinner>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ViewTaskRoutingModule } from './view-task-routing.module';\nimport { ViewTaskComponent } from './view-task.component';\nimport { TaskDetailsComponent } from './task-details/task-details.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SharedModule } from '../shared/shared.module';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\n\n@NgModule({\n  declarations: [ViewTaskComponent, TaskDetailsComponent],\n  imports: [\n    CommonModule,\n    TranslateModule,\n    ViewTaskRoutingModule,\n    ModalModule.forRoot(), \n    SharedModule,\n    NgxSpinnerModule\n  ]\n})\nexport class ViewTaskModule { }\n"]}