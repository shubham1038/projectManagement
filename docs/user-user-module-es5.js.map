{"version":3,"sources":["webpack:///src/app/core/model/employee.ts","webpack:///src/app/user/add-user/add-user.component.ts","webpack:///src/app/user/add-user/add-user.component.html","webpack:///src/app/user/user-routing.module.ts","webpack:///src/app/user/user.module.ts"],"names":["Employee","firstName","lastName","employeeId","userId","AddUserComponent","translate","router","userService","spinner","modalService","lang","desc","employee","empList","displayAddBtn","snapshot","params","setDefaultLang","use","getUserList","subscribe","data","reset","error","hide","redirectAfterSave","message","userForm","submitted","console","log","show","updateUser","resp","addUser","id","deleteUser","empObj","Object","assign","popMesg","confirmCallback","popTitle","confirmOK","val","direction","sort","a","b","onSubmit","selector","templateUrl","styleUrls","routes","path","component","UserRoutingModule","forChild","imports","exports","UserModule","forRoot","declarations"],"mappings":"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","file":"user-user-module-es5.js","sourcesContent":["export class Employee {\n    constructor(\n        public firstName: string,\n        public lastName: string,\n        public employeeId: string,\n        public userId: string\n    ){}\n\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Employee } from 'src/app/core/model/employee';\nimport { UserService } from 'src/app/core/service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ModalService } from 'src/app/shared/components/confirmok/data/modal-service';\nimport { catchError } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\nexport class AddUserComponent implements OnInit {\n  @ViewChild(\"userForm\") userForm;\n  lang: string = 'en';\n  searchName: string;\n  desc: boolean = false;\n  public employee = new Employee('', 'Kumar', '123', '');\n  public empList: any = [];\n  public displayAddBtn: boolean = true;\n  constructor(private translate: TranslateService,\n    private router: ActivatedRoute,\n    private userService: UserService,\n    private spinner: NgxSpinnerService,\n    private modalService: ModalService) {\n  }\n\n  ngOnInit(): void {\n    //  this.spinner.show();\n    if (this.router.snapshot.params) {\n      this.lang = this.router.snapshot.params.lang;\n      this.translate.setDefaultLang(this.lang);\n      this.translate.use(this.lang);\n    }\n    this.userService.getUserList().subscribe(data => {\n      this.empList = data || []\n      //this.spinner.hide();\n      this.reset();\n    },error =>{\n      this.reset();\n      this.spinner.hide();\n      this.redirectAfterSave(error.error.message, () => { }, \"Error\");\n    })\n  };\n\n  reset(): void {\n    this.userForm.submitted = false;\n    this.employee = {\n      employeeId: null,\n      firstName: null,\n      lastName: null,\n      userId: null\n    }\n  }\n\n  onSubmit(): void {\n    console.log(this.employee)\n    this.spinner.show();\n    if (this.employee.userId) {\n      this.userService.updateUser(this.employee).subscribe((resp) => {\n        this.userService.getUserList().subscribe(data => {\n          this.empList = data || []\n          this.displayAddBtn = true;\n          this.reset();\n          this.spinner.hide();\n          this.redirectAfterSave(\"User updated successfully\", () => { this.reset() }, \"Success\");\n        }, error => {\n          this.spinner.hide();\n          this.redirectAfterSave(\"error.error.message.\", () => { }, \"Error\");\n        })\n        console.log(resp)\n      })\n    } else {\n      this.userService.addUser(this.employee).subscribe((resp) => {\n        this.userService.getUserList().subscribe(data => {\n          this.empList = data || []\n          this.reset();\n          this.spinner.hide();\n          this.redirectAfterSave(\"User Saved successfully\", () => { this.reset() }, \"Success\");\n        }, error => {\n          this.spinner.hide();\n          this.redirectAfterSave(\"Error occured..\", () => { }, \"Error\");\n        })\n        console.log(resp)\n      })\n    }\n  }\n\n  deleteUser(id: number) {\n    this.spinner.show();\n    console.log('Employee Id -' + id)\n    this.userService.deleteUser(id).subscribe(data => {\n      this.userService.getUserList().subscribe(data => {\n        this.empList = data || []\n        this.spinner.hide();\n        this.redirectAfterSave(\"User deleted successfully\", () => { }, \"Success\");\n      },error =>{\n        this.empList = []\n        this.reset();\n        this.spinner.hide();\n        this.redirectAfterSave(error.error.message, () => { }, \"Error\");\n      })\n      console.log('Employee -' + id + 'Deelted successfully')\n\n    }, error => {\n      this.spinner.hide();\n      this.redirectAfterSave(\"Error occured..\", () => { }, \"Error\");\n    })\n  }\n\n  updateUser(empObj: Employee) {\n    console.log('Updated object -' + empObj)\n    this.employee = Object.assign({}, empObj)\n    this.displayAddBtn = false;\n\n  }\n  redirectAfterSave(popMesg, confirmCallback, popTitle) {\n    this.modalService.confirmOK(popMesg, confirmCallback, popTitle);\n  }\n\n  sort(val: string) {\n    this.desc = !this.desc;\n    let direction = this.desc ? 1 : -1\n    this.empList.sort(function (a, b) {\n      if (a[val] > b[val]) {\n        return 1 * direction;\n      } else if (a[val] < b[val]) {\n        return -1 * direction;\n      } else {\n        return 0;\n      }\n    });\n  }\n}\n","<div class=\"container\">\n    <div class=\"form-area mt-3\">\n    </div>\n    <form name=\"form\" novalidate (ngSubmit)=\"userForm.form.valid && onSubmit()\" #userForm=\"ngForm\" novalidate>\n       \n        <div class=\"form-group\">\n            <label for=\"firstName\">{{'lblFirstName' | translate}}</label>\n            <input type=\"text\" class=\"form-control\" name=\"firstName\" [(ngModel)]=\"employee.firstName\"\n                 required #firstName=\"ngModel\" [ngClass]=\"{ 'is-invalid': userForm.submitted && firstName.invalid }\" minlength=\"2\" maxlength=\"100\">\n            <div *ngIf=\"userForm.submitted && firstName.errors && (firstName.invalid || firstName.touched)\">\n                <div  class=\"alert alert-danger\" *ngIf=\"firstName.errors.required\">First Name is required</div>\n                <div  class=\"alert alert-danger\" [hidden]=\"!firstName.hasError('minlength')\">First Name is required (minimum 2 characters)</div>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"name\">{{'lblLastName' | translate}}</label>\n            <input type=\"text\" class=\"form-control\" name=\"lastName\" [(ngModel)]=\"employee.lastName\" \n            [ngClass]=\"{ 'is-invalid': userForm.submitted && lastName.invalid }\" required #lastName=\"ngModel\" minlength=\"2\" maxlength=\"100\">\n            <div *ngIf=\"userForm.submitted && lastName.invalid\" class=\"alert alert-danger\">\n              <div *ngIf=\"lastName.errors.required\">Last Name is required</div>\n              <div [hidden]=\"!lastName.hasError('minlength')\">Last Name is required (minimum 2 characters)</div>\n          </div>\n        </div>\n        \n        <div class=\"form-group\">\n            <label for=\"name\">{{'lblEmployeeId' | translate}}</label>\n            <input type=\"text\" [disabled]=\"employee?.userId != null\"  class=\"form-control\" name=\"employeeId\" [(ngModel)]=\"employee.employeeId\" \n              #employeeId=\"ngModel\" [ngClass]=\"{ 'is-invalid': userForm.submitted && employeeId.invalid }\" required pattern=\"[0-9]*\">\n            <div *ngIf=\"userForm.submitted && employeeId.invalid\" class=\"alert alert-danger\">\n              <div *ngIf=\"employeeId.errors.required\">Employee ID is required</div>\n              <div [hidden]=\"!employeeId.hasError('pattern')\">Employee Id should be only numbers</div>\n          </div>\n        </div>\n        \n        <div class=\"form-group btn-toolbar pull-right\">\n            <div class=\"col-md-12\">\n                <button type=\"button\" class=\"btn btn-secondary float-right m-1\" id=\"reset\"\n                    (click)=\"reset()\">{{'btnReset' | translate}}</button>\n                <button type=\"submit\" *ngIf= \"displayAddBtn == true\" class=\"btn btn-primary float-right m-1\"\n                    id=\"add\">{{'btnAddUser' | translate}}</button>\n                <button type=\"submit\" *ngIf= \"displayAddBtn == false\"class=\"btn btn-primary float-right m-1\"\n                    id=\"add\">{{'btnUpdateUser' | translate}}</button>\n            </div>\n        </div>\n    </form>\n</div>\n<hr class=\"style1\">\n<div *ngIf=\"empList.length ==0; else other_content\">\n  <div>\n    <p class=\"h4\">No Users available</p>\n  </div>\n</div>\n\n<ng-template #other_content>\n  <div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-6 col-sm-6\">\n            <input type=\"text\" #search (keyup)=\"0\" class=\"form-control\" placeholder=\"{{'btnSearch' | translate}}\" [(ngModel)]=\"searchName\">\n        </div>\n        <div class=\"col-md-6 col-sm-6\">\n          <label>{{'lblSortBy' | translate}}:</label>\n          <button type=\"submit\" class=\"btn btn-primary m-1\" id=\"fname\" (click) = \"sort('firstName')\">{{'lblFirstName' | translate}}</button>\n          <button type=\"submit\" class=\"btn btn-info m-1\" id=\"lname\" (click) = \"sort('lastName')\">{{'lblLastName' | translate}}</button>\n          <button type=\"submit\" class=\"btn btn-primary m-1\" id=\"empid\" (click) = \"sort('employeeId')\">{{'btnId' | translate}}</button>\n      \n      </div>\n    </div>\n  </div>\n</ng-template>\n<hr class=\"style1\">\n<div class=\"panel-body\">\n    <table class=\"table table-hover table-sm\" datatable>\n      <thead class=\"thead-light\">\n        <tr>\n          <th>First Name</th>\n          <th>Last Name</th>\n          <th>Employee Id</th>\n          <th>Action</th>\n\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let emp of empList | searchpipe:searchName\">\n          <td>{{emp.firstName}}</td>\n          <td>{{emp.lastName}}</td>\n          <td>{{emp.employeeId}}</td>\n          <td><button (click)=\"deleteUser(emp.userId)\" class='btn btn-primary m-1'><i\n                class=\"fa fa-futboll-0\">Delete</i></button>\n             <button (click)=\"updateUser(emp)\" class='btn btn-info m-1' data-toggle=\"modal\"\n              data-target=\"#myModal\">Update</button>\n          </td>\n        </tr>\n      </tbody><br>\n    </table>\n  </div>\n  <ngx-spinner bdColor=\"rgba(51, 51, 51, 0.8)\" size=\"default\" type=\"ball-spin-clockwise\">\n    <p style=\"color: white\">Please Wait. </p>\n</ngx-spinner>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AddUserComponent } from './add-user/add-user.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: AddUserComponent\r\n      }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UserRoutingModule { }\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserRoutingModule } from './user-routing.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [AddUserComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    UserRoutingModule,\n    // ngx-translate and the loader module\n    TranslateModule,\n    NgxSpinnerModule,\n    ModalModule.forRoot(),\n    SharedModule,\n  ]\n})\nexport class UserModule { }\n"]}