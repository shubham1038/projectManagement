{"version":3,"sources":["./src/app/add-task/add-task-routing.module.ts","./src/app/add-task/add-task.component.ts","./src/app/add-task/add-task.component.html","./src/app/add-task/add-task.module.ts","./src/app/core/model/add-task.ts"],"names":[],"mappings":"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","file":"add-task-add-task-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddTaskComponent } from './add-task.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddTaskComponent\n  },\n  {\n    path: ':taskId',\n    component: AddTaskComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AddTaskRoutingModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AddTask } from '../core/model/add-task';\nimport { ViewTaskService, ProjectService, ParentTaskService, UserService } from '../core/service';\nimport { ModalService } from '../shared/components/confirmok/data/modal-service';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-add-task',\n  templateUrl: './add-task.component.html',\n  styleUrls: ['./add-task.component.css']\n})\nexport class AddTaskComponent implements OnInit {\n\n  lang: string = 'en';\n  @ViewChild(\"taskForm\") taskForm;\n  public taskModal: AddTask = new AddTask();\n  public selectedTaskModal: AddTask = new AddTask();\n  public selectedTaskId: string;\n  public modelRef: BsModalRef;\n\n  constructor(private translate: TranslateService,\n    private router: ActivatedRoute,\n    private taskService: ViewTaskService,\n    private projectService: ProjectService,\n    private modalService: ModalService,\n    private parentTaskService: ParentTaskService,\n    private userService: UserService,\n    private spinner: NgxSpinnerService,\n    private route: Router) {\n\n    if (this.router.snapshot.params) {\n      this.lang = this.router.snapshot.params.lang;\n      this.translate.setDefaultLang(this.lang);\n      this.translate.use(this.lang);\n    }\n  }\n\n  ngOnInit(): void {\n    this.spinner.show();\n    if (this.router.snapshot.params) {\n      this.selectedTaskId = this.router.snapshot.params.taskId;\n      if (this.selectedTaskId) {\n        this.fetchSelectedTaskById()\n      }\n    }\n    this.spinner.hide();\n  }\n\n  fetchSelectedTaskById() {\n    this.taskService.getTaskById(this.selectedTaskId).subscribe(data => {\n      this.selectedTaskModal = data;\n      console.log(data)\n      this.fetchSelectedProject(data['projectId'])\n\n    })\n  }\n\n  fetchSelectedProject(projectId) {\n    this.projectService.getProjectsById(projectId).subscribe(response => {\n      this.selectedTaskModal.selectedProject = response;\n      this.taskModal = this.selectedTaskModal;\n    })\n  }\n  onSubmit() {\n    if (this.taskModal) {\n      if (this.taskModal.setParent) {\n        this.saveParentTask()\n      } else {\n        this.saveTask()\n      }\n    }\n  }\n\n  saveParentTask() {\n    this.spinner.show();\n    let parentTask = { parentTask: this.taskModal.task }\n    this.parentTaskService.saveParentTask(parentTask).subscribe(response => {\n      this.redirectAfterSave(\"Parent Task Saved successfully\", () => { this.reset() }, \"Success\");\n      this.spinner.hide();\n    }, error => {\n      this.spinner.hide();\n      this.redirectAfterSave(\"Error occured..\", () => { }, \"Error\");\n    })\n  }\n\n  saveTask() {\n    this.spinner.show();\n    if (this.taskModal && this.taskModal.taskId) {\n      this.taskService.updateTask(this.taskModal).subscribe((response) => {\n        this.redirectAfterSave(\"Task Updated successfully\", () => { this.reset() }, \"Success\")\n        this.spinner.hide();\n      },\n        error => {\n          this.spinner.hide();\n          this.redirectAfterSave(\"Error occured \", () => { }, \"Error\")\n        })\n    } else {\n      this.taskService.saveTask(this.taskModal).subscribe(response => {\n        this.redirectAfterSave(\"Task Saved successfully\", () => {\n          this.reset();\n\n          this.route.navigate([this.lang + '/viewTask/']);\n        }, \"Success\");\n        this.spinner.hide();\n      },\n        error => {\n          this.spinner.hide();\n          this.redirectAfterSave(\"Error occured \", () => { }, \"Error\");\n        })\n    }\n  }\n\n  redirectAfterSave(popMsg, confirmCallBack, popTitle) {\n    this.modalService.confirmOK(popMsg, confirmCallBack, popTitle)\n  }\n\n  searchProject() {\n    this.spinner.show();\n    this.projectService.getProjects().subscribe(response => {\n      this.modelRef = this.modalService.openProjectSearchPopUp(response,\n        \"Search Project\",\n        (obj) => { this.searchedProject(obj); },\n        \"Select\")\n      this.spinner.hide();\n    })\n  }\n\n  changeStartDate(event, date) {\n\n  }\n\n  searchEmployee() {\n    this.spinner.show();\n    this.userService.getUserList().subscribe(response => {\n      this.modelRef = this.modalService.openSearchPopUp(response,\n        \"Search Employee\",\n        (obj) => { this.selectedEmployee(obj); },\n        \"Select\")\n      this.spinner.hide();\n    })\n  }\n\n  selectedEmployee(obj) {\n    this.taskModal.selectedEmployee = obj.selectedItem;\n    this.modelRef.hide();\n  }\n  clearParentTask() {\n    this.taskModal.selectedParentTask = new AddTask().selectedParentTask;\n  }\n\n  searchedProject(obj) {\n    this.taskModal.selectedProject = obj.selectedItem;\n    this.modelRef.hide();\n  }\n\n  searchParentTask() {\n    this.spinner.show();\n    this.parentTaskService.getParentTasks().subscribe(response => {\n      this.modelRef = this.modalService.openParentTaskSearchPopUp(response,\n        \"Search Parent Task\",\n        (obj) => { this.selectedParentTask(obj); },\n        \"Select\")\n      this.spinner.hide();\n    })\n  }\n\n  selectedParentTask(obj) {\n\n    this.taskModal.selectedParentTask = obj.selectedItem;\n    this.taskModal.selectedParentTask.parentId = obj.selectedItem.parentId;\n    this.modelRef.hide();\n  }\n\n  reset() {\n    this.taskForm.submitted = false;\n    this.taskModal = new AddTask();\n  }\n}\n","<div class=\"container mt-3\">\n\n    <form name=\"form\" (ngSubmit)=\"taskForm.form.valid && onSubmit()\" #taskForm=\"ngForm\" novalidate>\n\n        <div class=\"form-group row\">\n            <label class=\"control-label col-sm-2\" for=\"pwd\">{{'lblProject' | translate}}:</label>\n            <div class=\"col-sm-8\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"{{'lblSearchProject' | translate}}\" name=\"project\"\n                    [(ngModel)]=\"taskModal.selectedProject.project\" #project=\"ngModel\"\n                    [ngClass]=\"{ 'is-invalid': taskForm.submitted && project.invalid }\" [readonly]=\"true\"\n                    [required]=\"!taskModal.setParent\">\n                <div *ngIf=\"taskForm.submitted && project.invalid\" class=\"error\">\n                    <div *ngIf=\"project.errors.required\">Project is required</div>\n                </div>\n            </div>\n            <div class=\"col-sm-2 m-0\">\n                <button type=\"button\" [disabled]=\"taskModal.setParent || taskModal?.taskId\"\n                    class=\"btn btn-info pull-right m-1\" (click)=\"searchProject()\">{{'btnSearch' | translate}}</button>\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <label class=\"control-label col-sm-2\" for=\"task\">{{'lblTask' | translate}}:</label>\n            <div class=\"col-sm-10\">\n                <input type=\"text\" class=\"form-control\" name=\"task\" [(ngModel)]=\"taskModal.task\" #task=\"ngModel\"\n                    [ngClass]=\"{ 'is-invalid': taskForm.submitted && task.invalid }\" [required]=\"true\" minlength=\"2\"\n                    maxlength=\"199\" />\n\n                <div *ngIf=\"taskForm.submitted && task.invalid\" class=\"error\">\n                    <div *ngIf=\"task.errors.required\">Task Name is required</div>\n                    <div [hidden]=\"!task.hasError('minlength')\">Task Name is required (minimum 2 characters)</div>\n                </div>\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <!-- <div class=\"row border\"> -->\n            <label class=\"control-label col-sm-2 col-md-2\"></label>\n            <div class=\"checkbox col-sm-10 col-md-3\">\n                <label><input type=\"checkbox\" [disabled]=\"taskModal?.selectedParentTask?.parentId || taskModal?.taskId\"\n                        name=\"setParent\" [(ngModel)]=\"taskModal.setParent\"> {{'lblParentTask' | translate}}</label>\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <label class=\"control-label col-sm-2 col-md-2\" for=\"priority\">{{'btnPriority' | translate}}:</label>\n            <div class=\"col-sm-9 col-md-9\">\n                <input type=\"range\" [(ngModel)]=\"taskModal.priority\" [value]=\"taskModal.priority\" [min]=\"0\" [max]=\"30\"\n                    class=\"custom-range\" name=\"priority\">\n            </div>\n            <div class=\"col-sm-1 col-md-1\">\n                {{taskModal.priority}}\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <label class=\"control-label col-md-2 col-sm-2\" for=\"pwd\">{{'lblParentTask' | translate}}:</label>\n            <div class=\"col-md-7 col-sm-7\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"{{'lblSearchParentTask' | translate}}\"\n                    name=\"selectedParentTask\" [(ngModel)]=\"taskModal.selectedParentTask.parentTask\"\n                    #selectedParentTask=\"ngModel\"\n                    [ngClass]=\"{ 'is-invalid': taskForm.submitted && selectedParentTask.invalid }\" [readonly]=\"true\">\n\n                <div *ngIf=\"taskForm.submitted && selectedParentTask.invalid\" class=\"error\">\n                    <div *ngIf=\"selectedParentTask.errors.required\">Parent Task is required</div>\n                </div>\n            </div>\n            <div class=\"col-md-3 col-sm-3 m-0\">\n                <div class=\"row ml-2\">\n                    <button type=\"button\" [disabled]=\"taskModal.setParent || taskModal.status == 0\"\n                        class=\"btn btn-info pull-right\" (click)=\"searchParentTask()\">{{'btnSearch' | translate}}\n                    </button>\n                    <button *ngIf=\"taskModal?.selectedParentTask?.parentId\" type=\"button\"\n                        [disabled]=\"taskModal.setParent\" class=\"btn btn-secondary pull-right ml-1\"\n                        (click)=\"clearParentTask()\">{{'btnClear' | translate}}\n                    </button>\n                </div>\n            </div>\n        </div>\n            <div class=\"form-group row\">\n                <label class=\"control-label col-sm-2 col-md-2\">{{'btnStartDate' | translate}}:</label>\n                <div class=\"col-xs-6 col-md-4\">\n                    <input type=\"text\" [(ngModel)]=\"taskModal.startDate\" name=\"startDate\" #startDate=\"ngModel\"\n                        placeholder=\"{{'lblStartDate' | translate}}\" class=\"form-control\" bsDatepicker\n                        [bsConfig]=\"{dateInputFormat: 'YYYY-MM-DD'}\" [isDisabled]=\"taskModal.setParent\"\n                        [required]=\"!taskModal.setParent\" (bsValueChange)=\"changeStartDate($event, 'startDate')\"\n                        autocomplete=\"off\"\n                        onkeydown=\"return false\">\n                    <div *ngIf=\"taskForm.submitted && startDate.invalid\" class=\"error\">\n                        <div *ngIf=\"startDate.errors.required\">Start Date is required</div>\n                    </div>\n                </div>\n                <label class=\"control-label col-sm-2 col-md-2\">{{'btnEndDate' | translate}}:</label>\n                <div class=\"col-xs-6 col-md-4\">\n                    <input type=\"text\" [(ngModel)]=\"taskModal.endDate\" name=\"endDate\" #endDate=\"ngModel\"\n                        placeholder=\"{{'lblEndDate' | translate}}\" class=\"form-control\" bsDatepicker\n                        [bsConfig]=\"{dateInputFormat: 'YYYY-MM-DD'}\" [isDisabled]=\"taskModal.setParent\"\n                        [required]=\"!taskModal.setParent\" onkeydown=\"return false\" \n                        autocomplete=\"off\" [minDate]=\"taskModal.startDate\">\n                        \n                    <div *ngIf=\"taskForm.submitted && endDate.invalid\" class=\"error\">\n                        <div *ngIf=\"endDate.errors.required\">End Date is required</div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"control-label col-sm-2\" for=\"pwd\">{{'lblUser' | translate}}:</label>\n                <div class=\"col-sm-8\">\n                    <input type=\"text\" class=\"form-control\" placeholder=\"{{'lblSearchUser' | translate}}\"\n                        name=\"selectedEmployee\" [(ngModel)]=\"taskModal.selectedEmployee.firstName\"\n                        #selectedEmployee=\"ngModel\"\n                        [ngClass]=\"{ 'is-invalid': taskForm.submitted && selectedEmployee.invalid }\" [readonly]=\"true\"\n                        [required]=\"!taskModal.setParent\">\n                    <div *ngIf=\"taskForm.submitted && selectedEmployee.invalid\" class=\"error\">\n                        <div *ngIf=\"selectedEmployee.errors.required\">User is required</div>\n                    </div>\n                </div>\n                <div class=\"col-sm-2\">\n                    <button type=\"button\" [disabled]=\"taskModal.setParent || taskModal?.taskId\"\n                        class=\"btn btn-info pull-right m-1\" (click)=\"searchEmployee()\">{{'btnSearch' | translate}}\n                    </button>\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <div class=\"col-md-12\">\n                    <button type=\"button\" [disabled]=\"taskModal.status == 0\" class=\"btn btn-secondary float-right m-1\"\n                        id=\"reset\" (click)=\"reset()\">{{'btnReset' | translate}}</button>\n                    <button type=\"submit\" [disabled]=\"taskModal.status == 0\" *ngIf=\"taskModal?.taskId == null\"\n                        class=\"btn btn-primary float-right m-1\" id=\"add\">{{'btnAdd' | translate}}</button>\n                    <button type=\"submit\" [disabled]=\"taskModal.status == 0\" *ngIf=\"taskModal?.taskId != null\"\n                        class=\"btn btn-primary float-right m-1\" id=\"update\">{{'btnUpdate' | translate}}</button>\n                </div>\n            </div>\n    </form>\n</div>\n<ngx-spinner bdColor=\"rgba(51, 51, 51, 0.8)\" size=\"default\" type=\"ball-spin-clockwise\">\n    <p style=\"color: white\">Please Wait. </p>\n</ngx-spinner>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { AddTaskRoutingModule } from './add-task-routing.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AddTaskComponent } from './add-task.component';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { SharedModule } from '../shared/shared.module';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\n@NgModule({\n  declarations: [AddTaskComponent],\n  imports: [\n    CommonModule,\n    ModalModule.forRoot(),\n    NgxSpinnerModule,\n    SharedModule,\n    FormsModule,\n    TranslateModule,\n    AddTaskRoutingModule,\n    BsDatepickerModule.forRoot(),\n  ]\n})\nexport class AddTaskModule { }\n","import { Project } from './project';\nimport { Employee } from './employee';\n\nexport class AddTask {\n    selectedProject:Project = new Project('',false,'','', new Employee('','','',''),'','');\n    setParent :boolean = false;\n    taskId:string;\n    task:string;\n    selectedParentTask :ParentTask = new ParentTask();\n    priority:string;\n    endDate:string;\n    startDate:string;\n    selectedEmployee:Employee = new Employee('','','','');\n    status:number = 1;\n}\n\nclass ParentTask{\n    parentId:string;\n    parentTask:any;\n}"],"sourceRoot":"webpack:///"}